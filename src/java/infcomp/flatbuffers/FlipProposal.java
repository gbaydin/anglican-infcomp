// automatically generated by the FlatBuffers compiler, do not modify

package infcomp.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FlipProposal extends Table {
  public static FlipProposal getRootAsFlipProposal(ByteBuffer _bb) { return getRootAsFlipProposal(_bb, new FlipProposal()); }
  public static FlipProposal getRootAsFlipProposal(ByteBuffer _bb, FlipProposal obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FlipProposal __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double probability() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createFlipProposal(FlatBufferBuilder builder,
      double probability) {
    builder.startObject(1);
    FlipProposal.addProbability(builder, probability);
    return FlipProposal.endFlipProposal(builder);
  }

  public static void startFlipProposal(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addProbability(FlatBufferBuilder builder, double probability) { builder.addDouble(0, probability, 0.0); }
  public static int endFlipProposal(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

