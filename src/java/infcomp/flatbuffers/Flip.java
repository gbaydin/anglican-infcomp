// automatically generated by the FlatBuffers compiler, do not modify

package infcomp.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Flip extends Table {
  public static Flip getRootAsFlip(ByteBuffer _bb) { return getRootAsFlip(_bb, new Flip()); }
  public static Flip getRootAsFlip(ByteBuffer _bb, Flip obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Flip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double proposalProbability() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createFlip(FlatBufferBuilder builder,
      double proposal_probability) {
    builder.startObject(1);
    Flip.addProposalProbability(builder, proposal_probability);
    return Flip.endFlip(builder);
  }

  public static void startFlip(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addProposalProbability(FlatBufferBuilder builder, double proposalProbability) { builder.addDouble(0, proposalProbability, 0.0); }
  public static int endFlip(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

