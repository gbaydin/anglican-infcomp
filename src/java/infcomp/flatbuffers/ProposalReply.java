// automatically generated by the FlatBuffers compiler, do not modify

package infcomp.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ProposalReply extends Table {
  public static ProposalReply getRootAsProposalReply(ByteBuffer _bb) { return getRootAsProposalReply(_bb, new ProposalReply()); }
  public static ProposalReply getRootAsProposalReply(ByteBuffer _bb, ProposalReply obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ProposalReply __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte proposalType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table proposal(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static int createProposalReply(FlatBufferBuilder builder,
      byte proposal_type,
      int proposalOffset) {
    builder.startObject(2);
    ProposalReply.addProposal(builder, proposalOffset);
    ProposalReply.addProposalType(builder, proposal_type);
    return ProposalReply.endProposalReply(builder);
  }

  public static void startProposalReply(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addProposalType(FlatBufferBuilder builder, byte proposalType) { builder.addByte(0, proposalType, 0); }
  public static void addProposal(FlatBufferBuilder builder, int proposalOffset) { builder.addOffset(1, proposalOffset, 0); }
  public static int endProposalReply(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

