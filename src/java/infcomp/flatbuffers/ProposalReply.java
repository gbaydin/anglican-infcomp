// automatically generated by the FlatBuffers compiler, do not modify

package infcomp.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ProposalReply extends Table {
  public static ProposalReply getRootAsProposalReply(ByteBuffer _bb) { return getRootAsProposalReply(_bb, new ProposalReply()); }
  public static ProposalReply getRootAsProposalReply(ByteBuffer _bb, ProposalReply obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ProposalReply __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean success() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public byte distributionType() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table distribution(Table obj) { int o = __offset(8); return o != 0 ? __union(obj, o) : null; }

  public static int createProposalReply(FlatBufferBuilder builder,
      boolean success,
      byte distribution_type,
      int distributionOffset) {
    builder.startObject(3);
    ProposalReply.addDistribution(builder, distributionOffset);
    ProposalReply.addDistributionType(builder, distribution_type);
    ProposalReply.addSuccess(builder, success);
    return ProposalReply.endProposalReply(builder);
  }

  public static void startProposalReply(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addSuccess(FlatBufferBuilder builder, boolean success) { builder.addBoolean(0, success, false); }
  public static void addDistributionType(FlatBufferBuilder builder, byte distributionType) { builder.addByte(1, distributionType, 0); }
  public static void addDistribution(FlatBufferBuilder builder, int distributionOffset) { builder.addOffset(2, distributionOffset, 0); }
  public static int endProposalReply(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

