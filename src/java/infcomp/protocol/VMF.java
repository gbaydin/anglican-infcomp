// automatically generated by the FlatBuffers compiler, do not modify

package infcomp.protocol;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class VMF extends Table {
  public static VMF getRootAsVMF(ByteBuffer _bb) { return getRootAsVMF(_bb, new VMF()); }
  public static VMF getRootAsVMF(ByteBuffer _bb, VMF obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public VMF __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NDArray priorMu() { return priorMu(new NDArray()); }
  public NDArray priorMu(NDArray obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public double priorKappa() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public NDArray proposalMu() { return proposalMu(new NDArray()); }
  public NDArray proposalMu(NDArray obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public double proposalKappa() { int o = __offset(10); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createVMF(FlatBufferBuilder builder,
      int prior_muOffset,
      double prior_kappa,
      int proposal_muOffset,
      double proposal_kappa) {
    builder.startObject(4);
    VMF.addProposalKappa(builder, proposal_kappa);
    VMF.addPriorKappa(builder, prior_kappa);
    VMF.addProposalMu(builder, proposal_muOffset);
    VMF.addPriorMu(builder, prior_muOffset);
    return VMF.endVMF(builder);
  }

  public static void startVMF(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addPriorMu(FlatBufferBuilder builder, int priorMuOffset) { builder.addOffset(0, priorMuOffset, 0); }
  public static void addPriorKappa(FlatBufferBuilder builder, double priorKappa) { builder.addDouble(1, priorKappa, 0.0); }
  public static void addProposalMu(FlatBufferBuilder builder, int proposalMuOffset) { builder.addOffset(2, proposalMuOffset, 0); }
  public static void addProposalKappa(FlatBufferBuilder builder, double proposalKappa) { builder.addDouble(3, proposalKappa, 0.0); }
  public static int endVMF(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

